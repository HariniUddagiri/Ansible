- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    subnet_id: subnet-0cbb1c995adc71b95
    instance_type: t3.micro
    security_group: sg-01794459d60b74295
    zone: daws82s.store
    instances:
    - mysql
    - backend
    - frontend
  tasks:
  - name: install boto libraries
    ansible.builtin.pip:
     name: "{{item}}"
     executable: pip3.9
    loop:
    - boto3
    - botocore
  - name: create ec2
    amazon.aws.ec2_instance:
     name: "{{item}}"
     image_id: "{{ami_id}}"
     subnet_id: "{{subnet_id}}"
     instance_type: "{{instance_type}}"
     security_group: "{{security_group}}"
    loop: "{{instances}}"
    register: ec2_info

  #- name: print ec2 output
  #  ansible.builtin.debug:
  #   msg: "{{ec2_info}}"

  - name: print private ip
    ansible.builtin.debug:
     msg: "{{item.instances.private_ip_address}}"
    loop: "{{ec2_info.results}}"

  - name: create private ip route53 records
    amazon.aws.route53:
     state: present
     zone: "{{zone}}"
     record: "{{item.item}}.{{zone}}"
     type: A
     ttl: 1
     value: "{{item.instances.private_ip_address}}"
     wait: true
     overwrite: true # if records are already created, will overwrite with new
    loop: "{{ec2_info.results}}"
  
  - name: create public ip route53 records
    amazon.aws.route53:
     state: present
     zone: "{{zone}}"
     record: "{{zone}}"
     type: A
     ttl: 1
     value: "{{item.instances.public_ip_address}}"
     wait: true
     overwrite: true # if records are already created, will overwrite with new
    loop: "{{ec2_info.results}}"
    when: item.item == "frontend"

  
       
       
     